server:
  port: "${server.port}"

spring:
  application:
    name: "${project.name}"
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: org.postgresql.Driver
    url: "${db.url}"
    username: '${db.user}'
    password: "${db.password}"
    hikari:
      idle-timeout: 30000
      maximum-pool-size: 10
      data-source-properties:
        reWriteBatchedInserts: true
  flyway:
    schemas: lim
  jooq:
    sql-dialect: Postgres

service:
  default:
    limit: 20
  logging:
    enabled: true

management:
  server:
    port: "${management.port}"
  metrics:
    export:
      prometheus:
        enabled: false
    tags:
      application: "${project.name}"
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,prometheus

kafka:
  consumer:
    group-id: "Liminator-Listener"
    party-management-concurrency: 7
    wallet-concurrency: 7
    identity-concurrency: 7
  topics:
    party-management:
      id: mg-events-party
      enabled: false
      consumer.group-id: "LiminatorListenerPartyManagement"
    identity:
      id: mg-events-ff-identity
      enabled: false
    wallet:
      id: mg-events-ff-wallet
      enabled: false

cache:
  party-shop:
    size: 10000
    expire:
      after:
        sec: 600

testcontainers:
  postgresql:
    tag: '11.4'
  kafka:
    tag: '6.2.0'
